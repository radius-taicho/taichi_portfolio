@use "../../styles/common/_variables.scss" as *;

// ===== MOBILE SKILLS SECTION STYLES =====
// Mobile-first approach with responsive design

// ===== MOBILE SKILLS SECTION =====
.skillsContentContainer {
  display: flex;
  flex-direction: column;
  gap: clamp(6px, 3vw, 12px); // デスクトップと統一されたスムーズな隙間
  align-items: center;
  justify-content: center;
  align-self: stretch;
  flex-shrink: 0;
  min-height: 320px; // 3-4-4配置用に高さ調整
  height: auto;
  position: relative;
  overflow: visible; // box-shadowが途切れるのを防ぐ
  padding: 32px 20px; // 左右のパディングを増やして小画面での途切れを防止

  // 小さい画面での調整
  @media screen and (max-width: 375px) {
    gap: clamp(4px, 2.5vw, 8px); // 3-4-4レイアウト用に隙間調整
    padding: 28px 16px;
    min-height: 300px;
  }

  // 小さい画面での調整 - パディングを大幅に増加してレイアウト崩れを防ぐ
  @include max-width(micro) {
    gap: clamp(4px, 2vw, 8px);
    padding: 28px 18px; // パディングを増加
    min-height: 200px;
  }

  @include max-width(nano) {
    gap: clamp(3px, 1.5vw, 6px);
    padding: 26px 16px;
    min-height: 180px;
  }

  @include max-width(tiny) {
    gap: clamp(2px, 1vw, 4px);
    padding: 24px 14px;
    min-height: 160px;
  }

  // 300px以下の超小画面対応 - レイアウト崩れを完全に防ぐ
  @media screen and (max-width: 300px) {
    padding: 24px 18px; // 十分な余白を確保
    gap: clamp(2px, 1vw, 4px);
    min-height: 140px;
  }
}

// ===== MOBILE TOOLTIP STYLES =====
.skillTooltip {
  position: absolute;
  bottom: calc(100% + 8px);
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.9);
  color: white;
  padding: 8px 12px;
  border-radius: 6px;
  font-family: $font-japanese;
  font-size: 12px;
  line-height: 1.4;
  white-space: nowrap;
  max-width: 200px;
  white-space: normal;
  text-align: center;
  z-index: 1000;
  opacity: 0;
  pointer-events: none;
  transition: all 0.3s ease;

  // 小画面対応
  @include max-width(micro) {
    font-size: 11px;
    padding: 6px 10px;
    max-width: 160px;
  }

  @include max-width(nano) {
    font-size: 10px;
    padding: 5px 8px;
    max-width: 140px;
  }

  &::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    border: 4px solid transparent;
    border-top-color: rgba(0, 0, 0, 0.9);
  }

  &.active {
    opacity: 1;
    pointer-events: auto;
  }

  .tooltipTitle {
    font-weight: 600;
    margin-bottom: 4px;
    color: #ffffff;
  }

  .tooltipDescription {
    font-weight: 400;
    color: #e0e0e0;
  }
}

// カーソル追従ツールチップ（モバイル）- テキスト幅に合わせるバージョン（改良版）
.skillTooltipCursor {
  position: fixed;
  // 固定幅を削除し、テキストに合わせたサイズに変更
  min-width: 60px; // 最小幅を設定
  max-width: calc(100vw - 32px); // 画面幅を超えないように制限
  width: auto; // テキストに合わせて自動調整
  background: rgba(0, 0, 0, 0.92);
  color: white;
  padding: 8px 12px;
  border-radius: 6px;
  font-family: $font-japanese;
  font-size: 14px;
  font-weight: 600;
  line-height: 1;
  text-align: center;
  z-index: 9999;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.15s ease, transform 0.15s ease, visibility 0.15s ease;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; // 長いテキストは省略記号で処理

  // 小画面対応
  @include max-width(micro) {
    max-width: calc(100vw - 24px); // 小画面用に幅制限を調整
    font-size: 13px;
    padding: 6px 10px;
    min-width: 50px;
  }

  @include max-width(nano) {
    max-width: calc(100vw - 20px); // さらに小さい画面用
    font-size: 12px;
    padding: 5px 8px;
    min-width: 45px;
  }

  &:not(.active) {
    opacity: 0;
    visibility: hidden;
    transform: translateY(3px) translateZ(0);
  }

  &.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0) translateZ(0);
  }
}

.skillWrapper {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.skillsRowContainer {
  display: flex;
  flex-direction: row;
  gap: clamp(8px, 3vw, 16px); // ベース間隔
  align-items: center;
  justify-content: center;
  width: 100%;
  flex-shrink: 0;
  position: relative;
  flex-wrap: nowrap;

  // ===== 小モバイル（375px～575px） =====
  @media screen and (min-width: 376px) and (max-width: 575px) {
    gap: clamp(10px, 3.5vw, 20px);
  }

  // ===== 大モバイル（576px～767px） =====
  @media screen and (min-width: 576px) and (max-width: 767px) {
    gap: clamp(12px, 4vw, 24px);
  }

  // ===== SM～MD範囲（768px～991px）- 大幅増加 =====
  @media screen and (min-width: 768px) and (max-width: 991px) {
    gap: clamp(20px, 5vw, 40px); // 大幅増加
  }

  // ===== MD以上（992px以上）- デスクトップ =====
  @include mq(md) {
    gap: clamp(28px, 5vw, 48px); // デスクトップ間隔
  }

  // ===== 超小画面対応 =====
  @include max-width(micro) {
    gap: clamp(6px, 3vw, 10px);
  }

  @include max-width(nano) {
    gap: clamp(5px, 2.5vw, 8px);
  }

  @include max-width(tiny) {
    gap: clamp(4px, 2vw, 6px);
  }

  @media screen and (max-width: 300px) {
    gap: clamp(3px, 2vw, 5px);
  }
}

// ===== 統一されたスキルアイコンサイズ管理（全面再構築）（改良版） =====
.skillCircleGrid {
  // ===== ベースサイズ（375px以下） =====
  width: clamp(52px, 11vw, 72px) !important;
  height: clamp(52px, 11vw, 72px) !important;
  margin: 3px;

  // 基本スタイル
  border-radius: 50%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  // 🎯 モバイルでもポインター強制表示
  cursor: pointer !important;
  -webkit-cursor: pointer !important;
  -moz-cursor: pointer !important;
  z-index: 1;
  position: relative;

  // 🎯 タッチデバイス向けポインター設定
  @media (hover: none) and (pointer: coarse) {
    cursor: pointer !important;
    -webkit-cursor: pointer !important;
  }

  @media (max-width: 767px) {
    cursor: pointer !important;
    -webkit-cursor: pointer !important;
  }

  // パフォーマンス最適化
  will-change: transform, box-shadow, z-index;
  backface-visibility: hidden;
  contain: layout style;
  transform: translateZ(0);

  // クリック時のスケールアニメーション（改良版）
  transition: transform 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94),
    box-shadow 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94), z-index 0s ease-out;

  &.clicked {
    transform: scale(1.12) translateZ(0) !important;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2) !important;
    z-index: 25 !important;
  }

  // 画像への強制適用（Next.js Image対応）

  // ===== 小モバイル（375px～575px） =====
  @media screen and (min-width: 376px) and (max-width: 575px) {
    width: clamp(58px, 12vw, 85px) !important;
    height: clamp(58px, 12vw, 85px) !important;
    margin: 4px;
  }

  // ===== 大モバイル（576px～767px） =====
  @media screen and (min-width: 576px) and (max-width: 767px) {
    width: clamp(68px, 13vw, 100px) !important;
    height: clamp(68px, 13vw, 100px) !important;
    margin: 5px;
  }

  // ===== SM～MD範囲（768px～991px）- 大幅増加 =====
  @media screen and (min-width: 768px) and (max-width: 991px) {
    width: clamp(120px, 16vw, 180px) !important; // 大幅増加
    height: clamp(120px, 16vw, 180px) !important;
    margin: 10px;
  }

  // ===== MD以上（992px以上）- デスクトップ =====
  @include mq(md) {
    width: clamp(140px, 14vw, 180px) !important; // デスクトップサイズ
    height: clamp(140px, 14vw, 180px) !important;
    margin: 14px;
  }

  // ===== 超小画面対応 =====
  @include max-width(micro) {
    width: clamp(48px, 11vw, 64px) !important;
    height: clamp(48px, 11vw, 64px) !important;
    margin: 2px;
  }

  @include max-width(nano) {
    width: clamp(44px, 12vw, 58px) !important;
    height: clamp(44px, 12vw, 58px) !important;
    margin: 2px;
  }

  @include max-width(tiny) {
    width: clamp(42px, 13vw, 54px) !important;
    height: clamp(42px, 13vw, 54px) !important;
    margin: 1px;
  }

  @media screen and (max-width: 300px) {
    width: clamp(40px, 14vw, 50px) !important;
    height: clamp(40px, 14vw, 50px) !important;
    margin: 1px;
  }
}

.rubyImageOnly {
  // ===== ベースサイズ（375px以下） =====
  width: clamp(52px, 11vw, 72px) !important;
  height: clamp(52px, 11vw, 72px) !important;
  margin: 3px;

  flex-shrink: 0;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  // 🎯 モバイルでもポインター強制表示（Ruby用）
  cursor: pointer !important;
  -webkit-cursor: pointer !important;
  -moz-cursor: pointer !important;
  z-index: 1;

  // 🎯 タッチデバイス向けポインター設定
  @media (hover: none) and (pointer: coarse) {
    cursor: pointer !important;
    -webkit-cursor: pointer !important;
  }

  @media (max-width: 767px) {
    cursor: pointer !important;
    -webkit-cursor: pointer !important;
  }

  // パフォーマンス最適化
  will-change: transform, z-index;
  backface-visibility: hidden;
  contain: layout style;
  transform: translateZ(0);

  // クリック時のスケールアニメーション（改良版）
  transition: transform 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94),
    z-index 0s ease-out;

  &.clicked {
    transform: scale(1.15) translateZ(0) !important;
    z-index: 25 !important;
  }

  // ===== 小モバイル（375px～575px） =====
  @media screen and (min-width: 376px) and (max-width: 575px) {
    width: clamp(58px, 12vw, 85px) !important;
    height: clamp(58px, 12vw, 85px) !important;
    margin: 4px;
  }

  // ===== 大モバイル（576px～767px） =====
  @media screen and (min-width: 576px) and (max-width: 767px) {
    width: clamp(68px, 13vw, 100px) !important;
    height: clamp(68px, 13vw, 100px) !important;
    margin: 5px;
  }

  // ===== SM～MD範囲（768px～991px）- 大幅増加 =====
  @media screen and (min-width: 768px) and (max-width: 991px) {
    width: clamp(120px, 16vw, 180px) !important; // skillCircleGridと同じサイズ
    height: clamp(120px, 16vw, 180px) !important;
    margin: 10px;
  }

  // ===== MD以上（992px以上）- デスクトップ =====
  @include mq(md) {
    width: clamp(140px, 14vw, 180px) !important; // skillCircleGridと同じサイズ
    height: clamp(140px, 14vw, 180px) !important;
    margin: 14px;
  }

  // ===== 超小画面対応 =====
  @include max-width(micro) {
    width: clamp(48px, 11vw, 64px) !important;
    height: clamp(48px, 11vw, 64px) !important;
    margin: 2px;
  }

  @include max-width(nano) {
    width: clamp(44px, 12vw, 58px) !important;
    height: clamp(44px, 12vw, 58px) !important;
    margin: 2px;
  }

  @include max-width(tiny) {
    width: clamp(42px, 13vw, 54px) !important;
    height: clamp(42px, 13vw, 54px) !important;
    margin: 1px;
  }

  @media screen and (max-width: 300px) {
    width: clamp(40px, 14vw, 50px) !important;
    height: clamp(40px, 14vw, 50px) !important;
    margin: 1px;
  }

  img {
    // コンテナ内で適切なサイズに調整
    width: 100% !important;
    height: 100% !important;
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    filter: drop-shadow(0 3px 12px rgba(0, 0, 0, 0.25));

    // パフォーマンス最適化
    will-change: filter;
    backface-visibility: hidden;
    transition: filter 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  &.clicked img {
    filter: drop-shadow(0 8px 20px rgba(0, 0, 0, 0.4)) !important;
  }
}

// Skill icon and text styles with responsive image sizing
.skillIcon {
  font-size: clamp(16px, 4vw, 24px);
  line-height: 1;
  margin-bottom: 2px;
  color: #ffffff;
  font-weight: bold;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;

  // 基本の画像レスポンシブサイズ設定
  img {
    width: clamp(24px, 6vw, 36px) !important;
    height: clamp(24px, 6vw, 36px) !important;
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }
}

.skillCircleGrid {
  .skillIcon img {
    // 新しいサークルサイズに合わせた画像サイズ（ベース）
    width: clamp(30px, 6vw, 50px) !important;
    height: clamp(30px, 6vw, 50px) !important;
    max-width: 90%;
    max-height: 90%;
    object-fit: contain;
    // パフォーマンス最適化
    will-change: transform;
    backface-visibility: hidden;
    transition: transform 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);

    // ===== 小モバイル（375px～575px） =====
    @media screen and (min-width: 376px) and (max-width: 575px) {
      width: clamp(36px, 7vw, 60px) !important;
      height: clamp(36px, 7vw, 60px) !important;
    }

    // ===== 大モバイル（576px～767px） =====
    @media screen and (min-width: 576px) and (max-width: 767px) {
      width: clamp(45px, 8vw, 70px) !important;
      height: clamp(45px, 8vw, 70px) !important;
    }

    // ===== SM～MD範囲（768px～991px）- 大幅増加 =====
    @media screen and (min-width: 768px) and (max-width: 991px) {
      width: clamp(80px, 12vw, 120px) !important; // 大幅増加
      height: clamp(80px, 12vw, 120px) !important;
    }

    // ===== MD以上（992px以上）- デスクトップ =====
    @include mq(md) {
      width: clamp(95px, 11vw, 130px) !important; // デスクトップサイズ
      height: clamp(95px, 11vw, 130px) !important;
    }

    // 325px-375px範囲での特別対応
    @media screen and (min-width: 325px) and (max-width: 375px) {
      width: clamp(34px, 8vw, 44px) !important;
      height: clamp(34px, 8vw, 44px) !important;
    }

    // 小さい画面での調整（最小サイズを保持してスムーズな変化）
    @include max-width(micro) {
      width: clamp(32px, 8vw, 40px) !important;
      height: clamp(32px, 8vw, 40px) !important;
    }

    @include max-width(nano) {
      width: clamp(30px, 8vw, 36px) !important;
      height: clamp(30px, 8vw, 36px) !important;
    }

    @include max-width(tiny) {
      width: clamp(28px, 9vw, 34px) !important;
      height: clamp(28px, 9vw, 34px) !important;
    }

    // 300px以下の超小画面対応 - レイアウト崩れを防ぐ
    @media screen and (max-width: 300px) {
      width: clamp(26px, 10vw, 32px) !important;
      height: clamp(26px, 10vw, 32px) !important;
    }
  }

  // Next.jsアイコンの個別調整（モバイル）
  &.skillNextjs .skillIcon img {
    transform: translateX(1px) translateY(5px); // 上に1px移動
    object-position: center center;
  }

  // Illustratorアイコンの個別調整（モバイル）
  &.skillIllustrator .skillIcon img {
    transform: translateX(-2px); // 上に0.5px移動
    object-position: center center;
  }
}

.skillText {
  font-family: $font-japanese;
  font-size: clamp(8px, 2vw, 10px);
  font-weight: 600;
  color: #ffffff;
  text-align: center;
  line-height: 1.1;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  word-break: break-all;
  hyphens: auto;
  max-width: 100%;
  overflow: hidden;

  // 長いテキストの場合の調整
  @media screen and (max-width: 320px) {
    font-size: 7px;
    line-height: 1;
  }
}

// ===== TECHNOLOGY-SPECIFIC COLORS =====
// Figma
.skillFigma {
  background: linear-gradient(145deg, #2f2f30, #1f1f20) !important;
  box-shadow: 0 8px 15px rgba(31, 31, 32, 0.6),
    inset 0 -2px 4px rgba(0, 0, 0, 0.3),
    inset 0 2px 4px rgba(255, 255, 255, 0.1) !important;
  z-index: 1;
  cursor: pointer;
}

// Illustrator
.skillIllustrator {
  background: linear-gradient(145deg, #5a0200, #390100) !important;
  box-shadow: 0 8px 15px rgba(57, 1, 0, 0.6),
    inset 0 -2px 4px rgba(0, 0, 0, 0.3),
    inset 0 2px 4px rgba(255, 255, 255, 0.1) !important;
  z-index: 1;
  cursor: pointer;
}

// Photoshop
.skillPhotoshop {
  background: linear-gradient(145deg, #002a52, #001935) !important;
  box-shadow: 0 8px 15px rgba(0, 25, 53, 0.6),
    inset 0 -2px 4px rgba(0, 0, 0, 0.3),
    inset 0 2px 4px rgba(255, 255, 255, 0.1) !important;
  z-index: 1;
  cursor: pointer;
}

// Next.js
.skillNextjs {
  background: linear-gradient(145deg, #333333, #000000) !important;
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.6), inset 0 -2px 4px rgba(0, 0, 0, 0.3),
    inset 0 2px 4px rgba(255, 255, 255, 0.1) !important;
  z-index: 1;
  cursor: pointer;
}

// Rails
.skillRails {
  background: linear-gradient(145deg, #c80b0b, #a00909) !important;
  box-shadow: 0 8px 15px rgba(200, 11, 11, 0.4),
    inset 0 -2px 4px rgba(0, 0, 0, 0.2),
    inset 0 2px 4px rgba(255, 255, 255, 0.3) !important;
  z-index: 1;
  cursor: pointer;
}

// Swift
.skillSwift {
  background: linear-gradient(145deg, #fe4317, #cc3512) !important;
  box-shadow: 0 8px 15px rgba(254, 67, 23, 0.4),
    inset 0 -2px 4px rgba(0, 0, 0, 0.2),
    inset 0 2px 4px rgba(255, 255, 255, 0.3) !important;
  z-index: 1;
  cursor: pointer;
}

// HTML/CSS/JS
.skillHtmlcssjs {
  background: linear-gradient(145deg, #ffffff, #f0f0f0) !important;
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15),
    inset 0 -2px 4px rgba(0, 0, 0, 0.1),
    inset 0 2px 4px rgba(255, 255, 255, 0.8) !important;
  z-index: 1;
  cursor: pointer;
}

// Sass
.skillSass {
  background: linear-gradient(145deg, #c96999, #b55a88) !important;
  box-shadow: 0 8px 15px rgba(201, 105, 153, 0.4),
    inset 0 -2px 4px rgba(0, 0, 0, 0.2),
    inset 0 2px 4px rgba(255, 255, 255, 0.3) !important;
  z-index: 1;
  cursor: pointer;
}

// Tailwind
.skillTailwind {
  background: linear-gradient(145deg, #43a6b2, #4cb0b3) !important;
  box-shadow: 0 8px 15px rgba(67, 166, 178, 0.4),
    inset 0 -2px 4px rgba(0, 0, 0, 0.2),
    inset 0 2px 4px rgba(255, 255, 255, 0.3) !important;
  z-index: 1;
  cursor: pointer;
}

// GitHub
.skillGithub {
  background: linear-gradient(145deg, #4a5568, #1a202c) !important;
  box-shadow: 0 8px 15px rgba(24, 23, 23, 0.6),
    inset 0 -2px 4px rgba(0, 0, 0, 0.3),
    inset 0 2px 4px rgba(255, 255, 255, 0.1) !important;
  z-index: 1;
  cursor: pointer;
}

// Ruby（円形画像のためスタイル不要）
/*
.skillRuby {
  background: linear-gradient(145deg, #cc342d, #a71e1e) !important;
  box-shadow: 0 10px 20px rgba(204, 52, 45, 0.4),
    inset 0 -3px 6px rgba(0, 0, 0, 0.3),
    inset 0 3px 6px rgba(255, 255, 255, 0.2) !important;
  z-index: 1;
}
*/

// ===== クリック可能な要素のスタイル（モバイル最適化）（超強化版） =====
.skillCircleGrid,
.rubyImageOnly {
  cursor: pointer;

  // 🎯 モバイルでもポインターを強制表示（修正版）
  @media (hover: none) and (pointer: coarse) {
    cursor: pointer !important;
    -webkit-cursor: pointer !important;
    -moz-cursor: pointer !important;
    transition: transform 0.12s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      box-shadow 0.12s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      filter 0.12s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  // 🎯 タッチデバイス向けの追加対策
  @media (max-width: 767px) {
    cursor: pointer !important;
    -webkit-cursor: pointer !important;
    -webkit-tap-highlight-color: transparent !important;
    -webkit-touch-callout: none !important;
  }

  // 🎯 すべてのタッチ状態でポインター維持
  &:hover,
  &:active,
  &:focus,
  &:touched {
    cursor: pointer !important;
    -webkit-cursor: pointer !important;
  }
}

// 画面リサイズ時のツールチップ安定性向上（モバイル版）（改良版）
.skillTooltipCursor {
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;

  max-width: calc(100vw - 20px);
  word-wrap: break-word;
  overflow-wrap: break-word;

  @media (hover: none) and (pointer: coarse) {
    max-width: calc(100vw - 16px);
  }
}
