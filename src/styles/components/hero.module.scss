@use "../common/_variables.scss" as *;

.heroSection {
  display: flex;
  align-items: center;
  justify-content: center;
  align-self: stretch;
  flex-shrink: 0;
  height: auto; // 100vhからautoに変更
  min-height: 600px; // 最小高さを設定
  max-height: 900px; // 最大高さを制限
  padding: 2rem 1rem; // パディングを追加
  overflow: hidden;
  width: 100%;

  @media screen and (max-width: 768px) {
    min-height: 400px;
    max-height: 600px;
    padding: 1rem 0.5rem;
  }
}

.heroContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 824px; // 明示的な高さ指定
  aspect-ratio: 1318/824;
  max-width: 1318px;
  max-height: 824px;
  position: relative; // fillプロパティのために必要

  /* レスポンシブ対応 */
  @media screen and (max-width: 1350px) {
    width: min(calc(100vw - 32px), 1318px);
    height: min(calc((100vw - 32px) * 0.625), 824px);
  }
}

.heroImage {
  border-radius: 24px;
  overflow: hidden;
  width: 100%;
  height: 100%;
  object-fit: cover;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
}

.heroImagePlaceholder {
  background: #bababa;
  border-radius: 24px;
  width: 100%;
  height: 824px; // コンテナと同じ高さに制限
  max-height: 824px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 2rem;
  color: #666;

  /* レスポンシブ対応 */
  @media screen and (max-width: 1350px) {
    height: min(calc((100vw - 32px) * 0.625), 824px);
  }

  > span {
    font-size: 1.5rem;
    font-weight: 300;
    margin-bottom: 1rem;
    color: #888;
  }
}

.noImageText {
  color: #666;
  font-size: 1rem;
  margin: 0.5rem 0;
  font-style: italic;
}

.loadingSpinner {
  width: 50px;
  height: 50px;
  border: 4px solid #ddd;
  border-top: 4px solid #667eea;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

.retryButton {
  background: #667eea;
  border: none;
  border-radius: 8px;
  color: white;
  padding: 0.8rem 1.5rem;
  font-size: 1rem;
  cursor: pointer;
  margin-top: 1rem;
  transition: all 0.3s ease;

  &:hover {
    background: #5a6fd8;
    transform: translateY(-2px);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@include mq(sm) {
  .heroContainer {
    /* sm以上では絶対値を使用 */
    width: 1318px;
    height: 824px;
  }
}

/* 小画面対応 */
@media screen and (max-width: 480px) {
  .heroSection {
    padding: 0.5rem;
    min-height: 300px;
    max-height: 500px;
  }

  .heroContainer {
    width: calc(100vw - 1rem);
    height: calc((100vw - 1rem) * 0.625);
    max-height: 400px;
  }

  .heroImagePlaceholder {
    padding: 1rem;
    height: calc((100vw - 1rem) * 0.625);
    max-height: 400px;

    > span {
      font-size: 1.2rem;
    }
  }
}

// Mobile-specific overrides - Hero is handled by mobile layout
@media screen and (max-width: 767px) {
  .heroSection {
    display: none;
  }
}
