@use "./common/_variables.scss" as *;

.pc {
  background: #ffffff;
  display: flex;
  flex-direction: column;
  gap: 0px;
  align-items: flex-start;
  justify-content: flex-start;
  position: relative;
  overflow-x: hidden; // 横方向のみ非表示、縦方向は表示して影を保持
  overflow-y: visible; // 縦方向は表示して影を保持
  min-height: 100vh;
}

// ===== BOTTOM SECTION & SCROLL TO TOP =====
// デスクトップ用ボトムセクション（右端配置）
.bottomSection {
  display: none; // モバイルでは非表示

  @include mq(sm) {
    display: flex;
    justify-content: flex-end; // 右端配置
    align-items: center;
    width: 100%;
    position: relative;
  }
}

.decorativeCircle {
  position: relative;
  cursor: pointer;

  img {
    display: block;
    width: 320px;
    height: 320px;
    object-fit: cover;
  }
}

/* ===== 新しいページネーションスタイル ===== */
.paginationWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 32px; // 20px → 32pxに拡大
  padding: 30px 0;
}

.dotContainer {
  position: relative;
  cursor: pointer;
  transition: transform 0.2s ease;
  width: 24px; // 固定幅を設定
  height: 24px; // 固定高さを設定
  display: flex;
  align-items: center;
  justify-content: center;
}

.dotContainer:hover {
  transform: scale(1.1);
}

.activeDot {
  position: relative;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.progressCircle {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
}

.centerDot {
  width: 8px;
  height: 8px;
  background-color: #e65853;
  border-radius: 50%;
  z-index: 2;
  position: relative;
}

.inactiveDot {
  width: 8px;
  height: 8px;
  background-color: #ccc;
  border-radius: 50%;
  transition: background-color 0.2s ease;
}

.inactiveDot:hover {
  background-color: #999;
}

// ===== OTHER WORKS CAROUSEL STYLES =====
// 他の作品用の単一画像カルーセル
.otherWorksCarouselWrapper {
  width: 100%;
  position: relative;
  overflow: visible;
  // ヒーローセクションよりも少し小さいパディング
  padding: clamp(16px, 3vw, 32px) 0;

  @media screen and (max-width: 480px) {
    padding: 12px 0;
  }
}

.otherWorksCarousel {
  position: relative;
  width: 100%;
  transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  // 一回り小さくするためのmaxWidthを設定
  max-width: clamp(300px, 85vw, 900px);
  margin: 0 auto;
}

.otherWorkLink {
  text-decoration: none;
  color: inherit;
  display: block;
  position: relative;
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    text-decoration: none;
    color: inherit;
    transform: translateY(-2px);

    .otherWorkImage {
      transform: scale(1.05);
    }

    .otherWorkInfo {
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
    }
  }
}

.otherWorkImageSection {
  position: relative;
  width: 100%;
  border-radius: clamp(12px, 3vw, 24px) clamp(12px, 3vw, 24px) 0 0; // 上側のみ角丸
  overflow: hidden;
  background: #f5f5f5;

  // ヒーローより小さいアスペクト比
  aspect-ratio: 16/10; // 基本的に16:10で統一

  @media screen and (max-width: 768px) {
    aspect-ratio: 4/3; // モバイルでは4:3
  }
}

.otherWorkImage {
  transition: transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  will-change: transform;
}

.otherWorkImagePlaceholder {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #f0f0f0;
  color: #999;
  font-size: clamp(0.9rem, 2.5vw, 1.2rem);
  font-weight: 500;
}

// トップページのWorkCardと同じ白地の情報エリア
.otherWorkInfo {
  background: #ffffff;
  padding: clamp(12px, 3vw, 20px);
  display: flex;
  flex-direction: column;
  gap: clamp(4px, 0.8vw, 8px);
  align-items: center;
  justify-content: center;
  border-radius: 0 0 clamp(12px, 3vw, 24px) clamp(12px, 3vw, 24px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  transition: box-shadow 0.3s ease;

  @media screen and (max-width: 480px) {
    padding: 10px 14px;
    gap: 3px;
  }
}

.otherWorkTitle {
  color: #333333; // 黒テキスト
  font-family: "Hiragino Maru Gothic ProN", "ヒラギノ丸ゴ ProN W4",
    "Hiragino Sans", "ヒラギノ角ゴシック", sans-serif !important;
  font-size: clamp(16px, 3vw, 22px);
  font-weight: 600;
  line-height: 1.4;
  margin: 0;
  text-align: center;

  @media screen and (max-width: 480px) {
    font-size: 14px;
  }
}

.otherWorkType {
  color: #666666; // グレーテキスト
  font-family: "Hiragino Maru Gothic ProN", "ヒラギノ丸ゴ ProN W4",
    "Hiragino Sans", "ヒラギノ角ゴシック", sans-serif !important;
  font-size: clamp(12px, 2vw, 16px);
  font-weight: 400;
  line-height: 1.4;
  margin: 0;
  text-align: center;

  @media screen and (max-width: 480px) {
    font-size: 11px;
  }
}

// 古いカルーセル関連のスタイルを削除・無効化
.threeItemCarouselWrapper,
.threeItemCarousel,
.carouselTrack,
.carouselItem,
.leftWork,
.rightWork,
.centerWork,
.hiddenWork,
.workCard,
.activeCard,
.workCardLink,
.workImageContainer,
.workImage,
.workInfo,
.workTitle,
.workType,
.workCardContent {
  display: none;
}

// カルーセル用ページネーション（レスポンシブ対応）
.paginationContainer {
  display: none !important;
}

.pagination {
  display: none !important;
}

.paginationDotsContainer {
  display: none !important;
}

.paginationDot {
  display: none !important;
}

// 旧いスタイルを無効化
.ellipse6,
.ellipse3 {
  display: none;
}

.ellipse6 {
  display: none !important;
}

.ellipse3 {
  display: none !important;
}

.content {
  padding: 64px 0px 120px 0px;
  display: flex;
  flex-direction: column;
  gap: 128px;
  align-items: flex-start;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;

  // アバウトページと同じ統一コンテナ幅設定を適用
  @include about-section-container;
}

.heroSection {
  display: flex;
  flex-direction: column;
  gap: 0px;
  align-items: flex-start;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;

  // コンテナ幅設定をリセット（.contentで適用済み）
  max-width: none;
  margin: 0;
  padding-left: 0;
  padding-right: 0;
}

.imageSection {
  display: flex;
  flex-direction: row;
  gap: 0px;
  align-items: center;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;
  overflow: hidden;

  // .contentで統一コンテナ幅設定を適用済みのため、パディングは不要
  padding: 0;
}

.image {
  background: #e8e8e8;
  border-radius: clamp(16px, 4vw, 48px); // レスポンシブなborder-radius
  align-self: stretch;
  flex: 1;
  position: relative;
  overflow: hidden;
  width: 100%;
  height: auto;

  // アバウトページのヒーロー画像と同じアスペクト比設定を適用
  aspect-ratio: 5/3; // モバイル: スマホで縦におさまるサイズ（横長）

  @include mq(xs) {
    aspect-ratio: 4/3; // タブレット縦向け
  }

  @include mq(sm) {
    aspect-ratio: 16/10; // タブレット横向け〜デスクトップ
  }
}

.imagePlaceholder {
  background: #bababa;
  border-radius: clamp(16px, 4vw, 48px); // レスポンシブなborder-radius
  align-self: stretch;
  flex: 1;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #666;
  font-size: clamp(1rem, 3vw, 1.5rem); // フォントサイズもレスポンシブに
  width: 100%;
  height: auto;

  // アバウトページのヒーロー画像と同じアスペクト比設定を適用
  aspect-ratio: 5/3; // モバイル: スマホで縦におさまるサイズ（横長）

  @include mq(xs) {
    aspect-ratio: 4/3; // タブレット縦向け
  }

  @include mq(sm) {
    aspect-ratio: 16/10; // タブレット横向け〜デスクトップ
  }
}

.infoSection {
  padding: 32px 0 0; // 40px から 32px に縮小
  display: flex;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;
  overflow: hidden;
  height: auto;
  gap: 32px; // 48px から 32px に縮小
  align-items: flex-start;

  // 常に縦並び
  flex-direction: column;
  justify-content: flex-start;

  @media screen and (max-width: 768px) {
    padding: 24px 0 0; // 32px から 24px に縮小
    gap: 20px; // 24px から 20px に縮小
  }

  @media screen and (max-width: 480px) {
    padding: 20px 0 0; // 24px から 20px に縮小
    gap: 16px; // 20px から 16px に縮小
  }
}

.projectDescription {
  display: flex;
  flex-direction: row;
  gap: 0px;
  align-items: center;
  justify-content: flex-start;
  flex-shrink: 0;
  position: relative;

  // 常に全幅使用
  width: 100%;
  min-width: 0; // フレックスアイテムの縮小を許可
}

.descriptionText {
  color: $text-color;
  text-align: left;
  font-family: $font-japanese;
  font-size: clamp(24px, 4vw, 36px); // レスポンシブなフォントサイズ
  font-weight: 600;
  position: relative;
  line-height: 1.4;
  word-break: break-word; // 長いテキストの改行対応
  width: 100%;

  @media screen and (max-width: 768px) {
    font-size: clamp(20px, 3.5vw, 28px);
  }

  @media screen and (max-width: 480px) {
    font-size: clamp(18px, 4vw, 24px);
  }
}

.projectDetails {
  flex-shrink: 0;
  position: relative;
  overflow: hidden;

  // 常に全幅使用
  width: 100%;
}

// 新しい2列グリッドレイアウト
.detailsGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 12px;
  width: 100%;

  // 極小画面（400px未満）では1列にする
  @media screen and (max-width: 399px) {
    grid-template-columns: 1fr;
  }
}

// カードスタイル
.detailCard {
  background: rgba(248, 249, 250, 0.6); // 薄いグレーの背景
  border: 1px solid rgba(229, 231, 235, 0.8); // 薄いボーダー
  border-radius: 8px;
  padding: 12px;
  
  // linkCardも他のカードと同じ幅にする
  &.linkCard {
    // grid-column: 1 / -1; を削除して通常のグリッドアイテムとして扱う
  }
}

// カードヘッダー
.cardHeader {
  margin-bottom: 6px;
}

// カードコンテンツ
.cardContent {
  color: $text-color;
  font-family: $font-japanese;
  font-size: 14px;
  font-weight: 400;
  line-height: 1.4;
  word-break: break-word;

  @media screen and (max-width: 768px) {
    font-size: 13px;
  }
}

// プロジェクトリンクのスタイル
.projectLink {
  color: #e65853 !important; // 指定された色
  text-decoration: underline; // アンダーラインを追加
  transition: all 0.2s ease;
  font-weight: 500;
  
  &:hover {
    color: #d44841 !important; // ホバー時はより濃い色
    text-decoration: underline; // ホバー時もアンダーラインを維持
  }
}

.detailRow {
  display: flex;
  flex-direction: column;
  gap: 4px;
  align-items: flex-start;
  justify-content: flex-start;
  flex-shrink: 0;
  position: relative;
}

.detailLabel {
  display: flex;
  flex-direction: row;
  gap: 0px;
  align-items: flex-start;
  justify-content: flex-start;
  flex-shrink: 0;
  position: relative;

  // 縦レイアウトでは幅の制限を解除
  width: auto;
}

.title,
.labelText {
  color: rgba(102, 102, 102, 0.7); // より透明度を上げて控えめに
  text-align: left;
  font-family: $font-japanese;
  font-size: 12px; // 14px から 12px に縮小
  font-weight: 400; // 500 から 400 に変更して控えめに
  position: relative;
  text-transform: lowercase; // uppercase から lowercase に変更
  letter-spacing: 0.3px; // 0.5px から 0.3px に縮小

  @media screen and (max-width: 768px) {
    font-size: 11px; // 13px から 11px に縮小
  }
}

.detailValue {
  color: $text-color;
  text-align: left;
  font-family: $font-japanese;
  font-size: 14px; // 16px から 14px に縮小
  font-weight: 400;
  position: relative;
  word-break: break-word; // 長いURLなどの改行対応

  // リンクのスタイル
  a {
    color: rgba(128, 128, 128, 0.8); // グレー系統に変更
    text-decoration: none;
    transition: color 0.2s ease;

    &:hover {
      color: rgba(96, 96, 96, 1); // ホバー時もグレー系統
      text-decoration: underline;
    }
  }

  @media screen and (max-width: 768px) {
    font-size: 13px; // 15px から 13px に縮小
  }
}

.clientValue {
  color: $text-color;
  text-align: left;
  font-family: $font-japanese;
  font-size: 14px; // 16px から 14px に縮小
  font-weight: 400;
  position: relative;
  word-break: break-word;

  @media screen and (max-width: 768px) {
    font-size: 13px; // 15px から 13px に縮小
  }
}

.linkContainer {
  display: flex;
  flex-direction: column;
  gap: 4px;
  align-items: flex-start;
  justify-content: flex-start;
  flex-shrink: 0;
  position: relative;

  @media screen and (max-width: 768px) {
    gap: 6px;
  }
}

.detailsSection {
  display: flex;
  flex-direction: column;
  gap: 10px;
  align-items: flex-start;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;
  overflow: hidden;

  // .contentで統一コンテナ幅設定を適用済みのため、パディングは不要
  padding: 0;
}

.projectSections {
  padding: 0px 16px 0px 16px;
  display: flex;
  flex-direction: column;
  gap: 80px;
  align-items: flex-start;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;
  overflow: hidden;

  @media screen and (max-width: 768px) {
    gap: 48px;
    padding: 0px 8px;
  }
}

.sectionRow {
  display: flex;
  flex-direction: row;
  gap: 40px; // ラベルとテキストの間隔を広げる（0px → 40px）
  align-items: flex-start;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;
  overflow: hidden;

  @media screen and (max-width: 768px) {
    flex-direction: column;
    gap: 20px; // モバイルでも縦方向の間隔を広げる（16px → 20px）
  }

  @media screen and (max-width: 480px) {
    gap: 16px; // 小さな画面では少し狭めに調整
  }
}

.sectionLabel,
.infoDesignLabel {
  display: flex;
  flex-direction: row;
  gap: 0px;
  align-items: flex-start;
  justify-content: flex-start;
  flex-shrink: 0;
  width: 180px; // ラベル部分の幅を少し広げる（160px → 180px）
  position: relative;
  overflow: hidden;

  @media screen and (max-width: 1024px) {
    width: 160px; // タブレットサイズでは元の幅に戻す
  }

  @media screen and (max-width: 768px) {
    width: 100%;
    margin-bottom: 8px; // モバイルでラベルの下により余白を追加
  }
}

.labelText2,
.issue {
  color: $text-color;
  text-align: left;
  font-family: $font-japanese;
  font-size: 20px;
  font-weight: 500; // フォントウェイトを少し太くしてラベルを強調（400 → 500）
  position: relative;
  letter-spacing: 0.03em; // ラベルの文字間隔を広げる

  @media screen and (max-width: 768px) {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 4px; // モバイルでラベルの下に少し余白を追加
  }
}

.conceptValue,
.sectionContent,
.issueValue {
  display: flex;
  flex-direction: row;
  gap: 0px;
  align-items: flex-start;
  justify-content: flex-start;
  flex: 1;
  position: relative;
  overflow: hidden;

  // テキスト部分の左パディングを追加して視覚的により分離
  padding-left: 8px;

  @media screen and (max-width: 768px) {
    padding-left: 0; // モバイルでは縦並びなのでパディング不要
  }
}

.conceptText,
.contentText {
  color: $text-color;
  text-align: left;
  font-family: $font-japanese;
  font-size: 20px;
  font-weight: 400;
  position: relative;
  flex: 1;
  line-height: 1.7; // 行間を少し広げて読みやすく（1.6 → 1.7）
  letter-spacing: 0.02em; // 文字間隔を少し広げる

  @media screen and (max-width: 768px) {
    font-size: 16px;
    line-height: 1.8; // モバイルでは行間をさらに広げる
    letter-spacing: 0.01em;
  }
}

.projectImageSection {
  background: #e8e8e8;
  display: flex;
  align-items: center;
  justify-content: center;
  align-self: stretch;
  position: relative;

  // コンテナ幅いっぱいのシンプルなサイズ
  width: 100%;
}

// .projectImageを削除して、画像を直接セクションに配置

.otherWorksSection {
  display: flex;
  flex-direction: column;
  gap: 64px;
  align-items: flex-start;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;
  overflow: hidden;

  // .contentで統一コンテナ幅設定を適用済みのため、パディングは不要
  padding: 0;

  @media screen and (max-width: 1024px) {
    gap: 48px;
  }

  @media screen and (max-width: 768px) {
    gap: 32px;
  }
}

.container {
  display: flex;
  flex-direction: row;
  gap: 10px;
  align-items: flex-start;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  height: 104px;
  position: relative;
  overflow: hidden;

  @media screen and (max-width: 768px) {
    height: 80px;
  }
}

.container2 {
  display: flex;
  flex-direction: row;
  gap: 10px;
  align-items: center;
  justify-content: flex-start;
  flex: 1;
  height: 104px;
  position: relative;

  @media screen and (max-width: 768px) {
    height: 80px;
  }
}

.sectionTitle {
  color: $text-color;
  text-align: left;
  font-family: $font-rubik;
  font-size: 48px;
  font-weight: 400;
  position: relative;

  @media screen and (max-width: 768px) {
    font-size: 32px;
  }

  @media screen and (max-width: 480px) {
    font-size: 28px;
  }
}

.otherWorks {
  display: flex;
  flex-direction: column;
  gap: 32px;
  align-items: flex-start;
  justify-content: flex-start;
  align-self: stretch;
  flex-shrink: 0;
  position: relative;
  overflow: hidden;
}

// sm以上用装飾セクション
.bottomSection {
  height: 320px;
  position: relative;
  display: flex;
  align-items: flex-end;

  // sm未満では非表示
  @media screen and (max-width: 767px) {
    display: none;
  }

  @media screen and (max-width: 768px) {
    height: 120px;
  }
}

.decorativeCircle {
  width: 320px;
  height: 320px;
  position: absolute;
  right: 0;
  bottom: 0;
}

.decorationSection {
  align-self: stretch;
  flex-shrink: 0;
  height: 240px;
  position: relative;

  @media screen and (max-width: 768px) {
    height: 120px;
  }
}

.ellipse1 {
  background: #d9d9d9;
  border-radius: 50%;
  width: 128px;
  height: 128px;
  position: absolute;
  right: 128px;
  top: 56px;

  @media screen and (max-width: 1024px) {
    right: 64px;
  }

  @media screen and (max-width: 768px) {
    width: 80px;
    height: 80px;
    right: 32px;
    top: 20px;
  }

  @media screen and (max-width: 480px) {
    right: 16px;
  }
}

// 新しいCSS Transform ベースのカルーセルスタイル
.carouselTrack {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: visible; // 影が表示されるように
  // カルーセルアイテムの影のための余白（狭く調整）
  padding: 16px;

  @media screen and (max-width: 768px) {
    padding: 12px;
  }

  @media screen and (max-width: 480px) {
    padding: 8px;
  }
}

.carouselItem {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: center center;
  transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
  will-change: transform, opacity;
  cursor: pointer;

  // 基本スタイル
  &.leftWork,
  &.rightWork {
    z-index: 2;

    &:hover {
      transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1) !important;
      z-index: 10;

      .workCard {
        transform: scale(1.08) translateY(-6px) !important;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3) !important;
      }

      .workImageContainer img {
        transform: scale(1.12) !important;
      }
    }

    // モバイル画面では左右の要素を非表示
    @media screen and (max-width: 768px) {
      opacity: 0 !important;
      pointer-events: none !important;
      transform: translate(-50%, -50%) translateX(0px) scale(0) !important;
    }
  }

  &.centerWork {
    z-index: 5;

    &:hover {
      transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1) !important;

      .workCard {
        transform: scale(1.05) translateY(-8px) !important;
        box-shadow: 0 24px 80px rgba(0, 0, 0, 0.35) !important;
      }

      .workImageContainer img {
        transform: scale(1.15) !important;
      }
    }

    // モバイルでは中央要素を完全に中央に配置
    @media screen and (max-width: 768px) {
      transform: translate(-50%, -50%) translateX(0px) scale(1) !important;
    }
  }

  &.rightWork {
    // leftWorkと同じスタイル
  }

  &.hiddenWork {
    z-index: 0;

    // モバイルでも非表示を維持
    @media screen and (max-width: 768px) {
      opacity: 0 !important;
      pointer-events: none !important;
    }
  }
}

// 新しいシステムで使用するスタイル
.workCardLink {
  text-decoration: none;
  color: inherit;
  display: block;
  position: relative;

  &:hover {
    text-decoration: none;
    color: inherit;
  }
}

.workCard {
  background: #ffffff;
  border-radius: clamp(16px, 3vw, 24px); // レスポンシブな角丸
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
  overflow: hidden;
  // レスポンシブなサイズ設定
  width: clamp(280px, 35vw, 380px);
  height: clamp(260px, 32vw, 360px);
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  position: relative;
  will-change: transform, box-shadow;

  // サイドカード（左右）のサイズ調整
  .leftWork &,
  .rightWork & {
    width: clamp(220px, 28vw, 300px);
    height: clamp(200px, 25vw, 280px);
  }

  &.activeCard {
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
  }

  // より細かいブレークポイント対応
  @media screen and (max-width: 1024px) {
    width: clamp(260px, 32vw, 340px);
    height: clamp(240px, 30vw, 320px);

    .leftWork &,
    .rightWork & {
      width: clamp(200px, 25vw, 280px);
      height: clamp(180px, 23vw, 260px);
    }
  }

  @media screen and (max-width: 768px) {
    width: clamp(240px, 38vw, 300px);
    height: clamp(220px, 35vw, 280px);

    .leftWork &,
    .rightWork & {
      width: clamp(180px, 30vw, 240px);
      height: clamp(160px, 28vw, 220px);
    }
  }

  @media screen and (max-width: 480px) {
    width: clamp(200px, 42vw, 260px);
    height: clamp(180px, 38vw, 240px);

    .leftWork &,
    .rightWork & {
      width: clamp(160px, 35vw, 200px);
      height: clamp(140px, 32vw, 180px);
    }
  }

  @media screen and (max-width: 375px) {
    width: clamp(180px, 45vw, 220px);
    height: clamp(160px, 40vw, 200px);

    .leftWork &,
    .rightWork & {
      width: clamp(140px, 38vw, 180px);
      height: clamp(120px, 35vw, 160px);
    }
  }
}

.workImageContainer {
  width: 100%;
  // レスポンシブな高さ設定
  height: clamp(180px, 25vw, 270px);
  position: relative;
  overflow: hidden;
  border-radius: clamp(16px, 3vw, 24px) clamp(16px, 3vw, 24px) 0 0;

  // サイドカード用の高さ調整
  .leftWork &,
  .rightWork & {
    height: clamp(140px, 20vw, 200px);
  }

  img {
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    will-change: transform;
  }

  // より細かいブレークポイント対応
  @media screen and (max-width: 1024px) {
    height: clamp(160px, 23vw, 240px);

    .leftWork &,
    .rightWork & {
      height: clamp(120px, 18vw, 180px);
    }
  }

  @media screen and (max-width: 768px) {
    height: clamp(140px, 26vw, 220px);

    .leftWork &,
    .rightWork & {
      height: clamp(100px, 20vw, 160px);
    }
  }

  @media screen and (max-width: 480px) {
    height: clamp(120px, 28vw, 180px);

    .leftWork &,
    .rightWork & {
      height: clamp(90px, 22vw, 140px);
    }
  }

  @media screen and (max-width: 375px) {
    height: clamp(100px, 30vw, 160px);

    .leftWork &,
    .rightWork & {
      height: clamp(80px, 25vw, 120px);
    }
  }
}

// トップページと同じ構造のworkImage
.workImage {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  aspect-ratio: 1318/824; // 画像のアスペクト比を維持
  border-radius: clamp(16px, 3vw, 24px) clamp(16px, 3vw, 24px) 0 0;
}

// トップページと同じ構造のworkInfo
.workInfo {
  padding: clamp(16px, 3vw, 20px) clamp(16px, 3vw, 20px) clamp(8px, 1.5vw, 12px)
    clamp(16px, 3vw, 20px); // 上 右 下 左 - 下部の余白を小さく
  display: flex;
  flex-direction: column;
  gap: clamp(4px, 0.8vw, 6px); // タイトルとタイプ間のギャップを小さく
  align-items: center;
  justify-content: center;
  width: 100%;
  text-align: center;
}

// トップページと同じ構造のworkTitle
.workTitle {
  display: block;
  color: $text-color;
  text-align: center;
  font-family: "Hiragino Maru Gothic ProN", "ヒラギノ丸ゴ ProN W4",
    "Hiragino Sans", "ヒラギノ角ゴシック", sans-serif !important;
  font-size: clamp(14px, 2.5vw, 18px);
  font-weight: 600;
  line-height: 1.4;
  margin: 0;

  // サイドカード用の調整
  .leftWork &,
  .rightWork & {
    font-size: clamp(12px, 2vw, 15px);
  }
}

// トップページと同じ構造のworkType
.workType {
  display: block;
  color: #666666;
  text-align: center;
  font-family: "Hiragino Maru Gothic ProN", "ヒラギノ丸ゴ ProN W4",
    "Hiragino Sans", "ヒラギノ角ゴシック", sans-serif !important;
  font-size: clamp(12px, 2vw, 14px);
  font-weight: 400;
  line-height: 1.5;
  margin: 0;

  // サイドカード用の調整
  .leftWork &,
  .rightWork & {
    font-size: clamp(10px, 1.6vw, 12px);
  }
}

.workCardContent {
  // タイトルのみのレイアウトに最適化したパディング
  padding: clamp(8px, 2vw, 16px) clamp(12px, 2.8vw, 24px);
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;

  h3 {
    margin: 0; // マージンをリセット（p要素がないため）
    // より細かいレスポンシブなフォントサイズ
    font-size: clamp(12px, 2.2vw, 18px);
    font-weight: 600;
    color: #333;
    line-height: 1.3;
    // 文字の溢れ対策
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  p {
    margin: 0;
    // より細かいレスポンシブなフォントサイズ
    font-size: clamp(9px, 1.6vw, 14px);
    color: #666;
    line-height: 1.4;
    // 文字の溢れ対策
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  // サイドカード用の調整
  .leftWork &,
  .rightWork & {
    padding: clamp(6px, 1.2vw, 12px) clamp(10px, 1.8vw, 20px);

    h3 {
      font-size: clamp(10px, 1.8vw, 15px);
    }
  }

  // より細かいブレークポイント対応
  @media screen and (max-width: 768px) {
    padding: clamp(6px, 1.5vw, 14px) clamp(10px, 2.5vw, 22px);

    h3 {
      font-size: clamp(11px, 2vw, 16px);
      // モバイルでは複数行表示を許可
      white-space: normal;
      overflow: visible;
      text-overflow: initial;
    }

    .leftWork &,
    .rightWork & {
      padding: clamp(4px, 1vw, 10px) clamp(8px, 1.8vw, 18px);

      h3 {
        font-size: clamp(9px, 1.5vw, 13px);
      }
    }
  }

  @media screen and (max-width: 480px) {
    padding: clamp(5px, 1.2vw, 12px) clamp(8px, 2vw, 18px);

    h3 {
      font-size: clamp(10px, 1.8vw, 14px);
    }
  }

  @media screen and (max-width: 375px) {
    padding: clamp(4px, 1vw, 10px) clamp(6px, 1.6vw, 16px);

    h3 {
      font-size: clamp(9px, 1.6vw, 12px);
    }
  }
}

// ローディングとエラー表示
.loadingContainer,
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 60vh;
  padding: 2rem;
  text-align: center;
}

.loadingSpinner {
  width: 50px;
  height: 50px;
  border: 4px solid #ddd;
  border-top: 4px solid #667eea;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

.errorContainer {
  h1 {
    color: #333;
    margin-bottom: 1rem;
    font-size: 2rem;
  }

  p {
    color: #666;
    margin-bottom: 2rem;
    font-size: 1.1rem;
  }
}

.backButton {
  background: #667eea;
  color: white;
  padding: 0.8rem 1.5rem;
  border-radius: 8px;
  text-decoration: none;
  transition: background 0.3s ease;

  &:hover {
    background: #5a6fd8;
  }
}

// 制作期間表示用スタイル
.productionPeriod {
  display: flex;
  flex-direction: column;
  gap: 12px;
  width: 100%;
}

.periodItem {
  display: flex;
  align-items: center;
  gap: 8px;

  @media screen and (max-width: 768px) {
    flex-direction: column;
    align-items: flex-start;
    gap: 4px;
  }
}

.periodLabel {
  color: $text-color;
  font-family: $font-japanese;
  font-size: 18px;
  font-weight: 500;
  min-width: 120px;

  @media screen and (max-width: 768px) {
    font-size: 16px;
    min-width: auto;
  }
}

.periodValue {
  color: #667eea;
  font-family: $font-japanese;
  font-size: 18px;
  font-weight: 600;

  @media screen and (max-width: 768px) {
    font-size: 16px;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// ===== BOTTOM SECTION & SCROLL TO TOP =====
.bottomSection {
  display: none; // モバイルでは非表示

  @include mq(sm) {
    display: flex;
    justify-content: flex-end; // 右端配置
    align-items: center;
    width: 100%;
    position: relative;
  }
}

.decorativeCircle {
  position: relative;
  cursor: pointer;

  img {
    display: block;
    width: 320px;
    height: 320px;
    object-fit: cover;
  }
}
