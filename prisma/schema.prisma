// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Work {
  id                String   @id @default(cuid())
  title            String
  name             String?
  client           String?
  type             String
  status           String   @default("completed")
  concept          String?
  target           String?
  challenge        String?
  purpose          String?
  informationDesign String?
  design           String?
  implementation   String?
  planningDays     Int?
  designDays       Int?
  codingDays       Int?
  
  // 後方互換性のため保持（段階的移行用）
  mainImage        String?
  designImage      String?
  
  link             String?
  displayOrder     Int      @default(0)
  
  // 新機能: 複数画像サポート
  isGroup          Boolean  @default(false) // グループプロジェクトかどうか
  itemCount        Int?     // アイコン/イラストの総数
  
  // リレーション
  images           WorkImage[]
  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("works")
}

// 新テーブル: 作品に関連する画像群
model WorkImage {
  id          String   @id @default(cuid())
  workId      String
  
  // 画像情報
  imageUrl    String
  publicId    String
  
  // メタデータ
  fileName    String?
  title       String?
  description String?
  
  // 分類・整理用
  imageType   String
  category    String?
  sortOrder   Int      @default(0)
  
  // UFOキャッチャー用設定
  isVisible   Boolean  @default(true)   // UFOキャッチャーで表示するか
  rarity      String?
  
  // リレーション
  work        Work     @relation(fields: [workId], references: [id], onDelete: Cascade)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("work_images")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String?
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model HeroImage {
  id          String   @id @default(cuid())
  title       String
  description String?
  imageUrl    String
  publicId    String
  isActive    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("hero_images")
}
